apiVersion: v1
kind: Namespace
metadata:
  name: cert-manager
---
apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx
---
apiVersion: v1
kind: Namespace
metadata:
  name: nats
---
apiVersion: v1
kind: Namespace
metadata:
  name: observability
---
apiVersion: v1
kind: Namespace
metadata:
  name: postgres
---
apiVersion: v1
data:
  values.yaml: |
    # thank you https://github.com/mailazy/blog/blob/28258657fc9d636eed08b6ff65f953bf450a57e5/content/exposing-tcp-udp-services-ingress/index.md
    tcp:
      26257: "cockroachdb/cockroachdb-service:26257"
      6379: "redis/redis-service:6379"
      5432: "postgres/mypostgres:5432"
      5433: "postgres/mypostgres-replica:5432"
      4317: "observability/observability-opentelemetry-collector:4317"
      4318: "observability/observability-opentelemetry-collector:4318"
      4222: "nats/nats-nats:4222"
    controller:
      config:
        enable-opentracing: "true"
        jaeger-collector-host: observability-opentelemetry-collector.observability
        enable-brotli: "true"
        brotli-level: 8
kind: ConfigMap
metadata:
  name: configmap-nginx
  namespace: ingress-nginx
---
apiVersion: v1
data:
  nack-values.yaml: "jetstream:\n  enabled: true\n  \n  nats:\n    url: nats://nats-nats:4222
    \ "
kind: ConfigMap
metadata:
  name: configmap-nack
  namespace: nats
---
apiVersion: v1
data:
  nats-values.yaml: "nats:\n  #jetstream\n  jetstream:\n    enabled: true\n\n    memStorage:\n
    \     enabled: true\n      size: \"2Gi\"\n\n    fileStorage:\n      enabled: true\n
    \     storageDirectory: /data/\n      existingClaim: nats-js-disk\n      claimStorageSize:
    3Gi\n\n  # NATS Server TLS\n  tls:\n    allowNonTLS: true\n    secret:\n      name:
    nats-server-tls\n    ca: \"ca.crt\"\n    cert: \"tls.crt\"\n    key: \"tls.key\"\n
    \   timeout: \"5s\"\n\ncluster:\n  enabled: true\n  replicas: 3\n\n  tls:\n    secret:\n
    \     name: nats-server-tls\n    ca: \"ca.crt\"\n    cert: \"tls.crt\"\n    key:
    \"tls.key\"\n    \nexporter:\n  # You have to enable exporter first\n  enabled:
    false  "
kind: ConfigMap
metadata:
  name: configmap-nats
  namespace: nats
---
apiVersion: v1
data:
  values.yaml: "agentCollector:\n  enabled: false\nstandaloneCollector:\n  enabled:
    true\nconfig:  \n  exporters:\n    jaeger:\n      endpoint: jaeger-collector.observability:14250\n
    \     tls:\n        insecure: true\n    # otlp:\n    #   endpoint: https://otlp.nr-data.net:4317\n
    \   #   headers:\n    #     api-key: \"xxx\"\n  service:\n    pipelines:\n      metrics:
    null\n      traces:\n        exporters:\n          - jaeger  \n          # - otlp
    \     "
kind: ConfigMap
metadata:
  name: configmap-opentelemetry-collector
  namespace: observability
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-class: local-path
  name: nats-js-disk
  namespace: nats
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-backup-pvc
  namespace: postgres
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: nats-server-tls
  namespace: nats
spec:
  commonName: nats-nats.nats.svc.cluster.local
  dnsNames:
  - nats-nats
  - nats-nats.nats
  - nats-nats.nats.svc
  - nats-nats.nats.svc.cluster.local
  - '*.nats-nats'
  - '*.nats-nats.nats'
  - '*.nats-nats.nats.svc'
  - '*.nats-nats.nats.svc.cluster.local'
  duration: 2160h
  issuerRef:
    kind: ClusterIssuer
    name: mkcert-cluster-issuer
  renewBefore: 240h
  secretName: nats-server-tls
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: mkcert-cluster-issuer
  namespace: cert-manager
spec:
  ca:
    secretName: ca-key-pair
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cert-manager
  namespace: cert-manager
spec:
  chart:
    spec:
      chart: cert-manager
      interval: 120m
      sourceRef:
        kind: HelmRepository
        name: cert-manager
        namespace: flux-system
      version: '>=1.7.0'
  interval: 5m
  targetNamespace: cert-manager
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
spec:
  chart:
    spec:
      chart: ingress-nginx
      interval: 1m
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
      version: '>=4'
  interval: 1m
  targetNamespace: ingress-nginx
  valuesFrom:
  - kind: ConfigMap
    name: configmap-nginx
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nack
  namespace: nats
spec:
  chart:
    spec:
      chart: nack
      interval: 1m
      sourceRef:
        kind: HelmRepository
        name: nats
        namespace: flux-system
      version: '>=0.13'
  interval: 1m
  targetNamespace: nats
  valuesFrom:
  - kind: ConfigMap
    name: configmap-nack
    valuesKey: nack-values.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nats
  namespace: nats
spec:
  chart:
    spec:
      chart: nats
      interval: 1m
      sourceRef:
        kind: HelmRepository
        name: nats
        namespace: flux-system
      version: '>=0.13'
  interval: 1m
  targetNamespace: nats
  valuesFrom:
  - kind: ConfigMap
    name: configmap-nats
    valuesKey: nats-values.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jaeger-operator
  namespace: observability
spec:
  chart:
    spec:
      chart: jaeger-operator
      interval: 1m
      sourceRef:
        kind: HelmRepository
        name: jaegertracing
        namespace: flux-system
      version: '>=0.5'
  interval: 1m
  targetNamespace: observability
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: opentelemetry-collector
  namespace: observability
spec:
  chart:
    spec:
      chart: opentelemetry-collector
      interval: 1m
      sourceRef:
        kind: HelmRepository
        name: opentelemetry
        namespace: flux-system
      version: '>=0.12'
  interval: 1m
  targetNamespace: observability
  valuesFrom:
  - kind: ConfigMap
    name: configmap-opentelemetry-collector
---
apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: jaeger
  namespace: observability
---
apiVersion: kubegres.reactive-tech.io/v1
kind: Kubegres
metadata:
  annotations:
    linkerd.io/inject: enabled
  name: mypostgres
  namespace: postgres
spec:
  backup:
    pvcName: my-backup-pvc
    schedule: 0 */1 * * *
    volumeMount: /var/lib/backup
  database:
    size: 200Mi
  env:
  - name: POSTGRES_PASSWORD
    valueFrom:
      secretKeyRef:
        key: superUserPassword
        name: local-postgres-secret
  - name: POSTGRES_REPLICATION_PASSWORD
    valueFrom:
      secretKeyRef:
        key: replicationUserPassword
        name: local-postgres-secret
  image: postgres:14.1
  replicas: 3
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: cert-manager
  namespace: flux-system
spec:
  interval: 120m
  url: https://charts.jetstack.io
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: ingress-nginx
  namespace: flux-system
spec:
  interval: 1m
  url: https://kubernetes.github.io/ingress-nginx
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: jaegertracing
  namespace: flux-system
spec:
  interval: 1m
  url: https://jaegertracing.github.io/helm-charts
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: nats
  namespace: flux-system
spec:
  interval: 1m
  url: https://nats-io.github.io/k8s/helm/charts/
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: opentelemetry
  namespace: flux-system
spec:
  interval: 1m
  url: https://open-telemetry.github.io/opentelemetry-helm-charts
