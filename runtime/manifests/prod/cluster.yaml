apiVersion: v1
kind: Namespace
metadata:
  name: cert-manager
---
apiVersion: v1
kind: Namespace
metadata:
  name: cockroachdb
---
apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx
---
apiVersion: v1
kind: Namespace
metadata:
  name: nats
---
apiVersion: v1
kind: Namespace
metadata:
  name: observability
---
apiVersion: v1
data:
  values.yaml: "tls:\n  certs:\n    selfSigner:\n      enabled: false\n    certManager:
    true\n    certManagerIssuer:\n      kind: ClusterIssuer\n      name: mkcert-cluster-issuer\n
    \   useCertManagerV1CRDs: true      "
kind: ConfigMap
metadata:
  name: configmap-cockroachdb
  namespace: cockroachdb
---
apiVersion: v1
data:
  values.yaml: |
    controller:
      config:
        enable-opentracing: "true"
        jaeger-collector-host: opentelemetry-collector.observability
        enable-brotli: "true"
        brotli-level: 8
kind: ConfigMap
metadata:
  name: configmap-nginx
  namespace: ingress-nginx
---
apiVersion: v1
data:
  nack-values.yaml: "jetstream:\n  enabled: true\n  \n  nats:\n    url: nats://nats-nats:4222
    \ "
kind: ConfigMap
metadata:
  name: configmap-nack
  namespace: nats
---
apiVersion: v1
data:
  nats-values.yaml: "nats:\n  #jetstream\n  jetstream:\n    enabled: true\n\n    memStorage:\n
    \     enabled: true\n      size: \"2Gi\"\n\n    fileStorage:\n      enabled: true\n
    \     storageDirectory: /data/\n      existingClaim: nats-js-disk\n      claimStorageSize:
    3Gi\n\n  # NATS Server TLS\n  tls:\n    allowNonTLS: true\n    secret:\n      name:
    nats-server-tls\n    ca: \"ca.crt\"\n    cert: \"tls.crt\"\n    key: \"tls.key\"\n
    \   timeout: \"5s\"\n\ncluster:\n  enabled: true\n  replicas: 3\n\n  tls:\n    secret:\n
    \     name: nats-server-tls\n    ca: \"ca.crt\"\n    cert: \"tls.crt\"\n    key:
    \"tls.key\"\n    \nexporter:\n  # You have to enable exporter first\n  enabled:
    false  "
kind: ConfigMap
metadata:
  name: configmap-nats
  namespace: nats
---
apiVersion: v1
data:
  values.yaml: "agentCollector:\n  enabled: false\nstandaloneCollector:\n  enabled:
    true\nconfig:  \n  exporters:\n    jaeger:\n      endpoint: jaeger-collector.observability:14250\n
    \     tls:\n        insecure: true\n    # otlp:\n    #   endpoint: https://otlp.nr-data.net:4317\n
    \   #   headers:\n    #     api-key: \"xxx\"\n  service:\n    pipelines:\n      metrics:
    null\n      traces:\n        exporters:\n          - jaeger  \n          # - otlp
    \     "
kind: ConfigMap
metadata:
  name: configmap-opentelemetry-collector
  namespace: observability
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: cert-manager
spec:
  acme:
    email: 4hxckw2zo@relay.firefox.com
    privateKeySecretRef:
      name: letsencrypt-prod
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
    - http01:
        ingress:
          class: nginx
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
  namespace: cert-manager
spec:
  acme:
    email: 4hxckw2zo@relay.firefox.com
    privateKeySecretRef:
      name: letsencrypt-staging
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    solvers:
    - http01:
        ingress:
          class: nginx
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: mkcert-cluster-issuer
  namespace: cert-manager
spec:
  ca:
    secretName: ca-key-pair
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cert-manager
  namespace: cert-manager
spec:
  chart:
    spec:
      chart: cert-manager
      interval: 120m
      sourceRef:
        kind: HelmRepository
        name: cert-manager
      version: =1.7.2
  interval: 5m
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
spec:
  chart:
    spec:
      chart: ingress-nginx
      interval: 1m
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: ingress-nginx
      version: '>=4'
  interval: 1m
  valuesFrom:
  - kind: ConfigMap
    name: configmap-nginx
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jaeger-operator
  namespace: observability
spec:
  chart:
    spec:
      chart: jaeger-operator
      interval: 1m
      sourceRef:
        kind: HelmRepository
        name: jaegertracing
        namespace: observability
      version: =2.29
  interval: 1m
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: opentelemetry-collector
  namespace: observability
spec:
  chart:
    spec:
      chart: opentelemetry-collector
      interval: 1m
      sourceRef:
        kind: HelmRepository
        name: opentelemetry
      version: =0.12.1
  interval: 1m
  valuesFrom:
  - kind: ConfigMap
    name: configmap-opentelemetry-collector
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: cert-manager
  namespace: cert-manager
spec:
  interval: 120m
  url: https://charts.jetstack.io
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: cockroachdb
  namespace: cockroachdb
spec:
  interval: 1m
  url: https://charts.cockroachdb.com/
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
spec:
  interval: 1m
  url: https://kubernetes.github.io/ingress-nginx
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: nats
  namespace: nats
spec:
  interval: 1m
  url: https://nats-io.github.io/k8s/helm/charts/
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: jaegertracing
  namespace: observability
spec:
  interval: 1m
  url: https://jaegertracing.github.io/helm-charts
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: opentelemetry
  namespace: observability
spec:
  interval: 1m
  url: https://open-telemetry.github.io/opentelemetry-helm-charts
